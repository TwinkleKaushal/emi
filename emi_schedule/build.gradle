buildscript {
    ext {
      springBootVersion = '2.7.6'
   }
   repositories {
      mavenCentral()
   }
   dependencies {
         classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
      classpath('se.transmode.gradle:gradle-docker:1.2')
   }
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.connection.emi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
   applicationName = jar.baseName
   dockerfile = file('Dockerfile')
   doFirst {
      copy {
         from jar
         into stageDir
      }
   }
}

jar{
    archiveClassifier=''
    enabled = false
    manifest {
        attributes(
                'Main-Class': 'com.connection.emi.EmiScheduleApplication'
        )
    }
}



repositories {
	mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
 
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
implementation group: 'com.google.code.gson', name: 'gson', version: '2.10'
    // https://mvnrepository.com/artifact/javax.validation/validation-api
implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
implementation 'io.springfox:springfox-swagger-ui:2.9.2'
// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
implementation 'io.springfox:springfox-swagger2:2.9.2'

}

tasks.named('test') {
	useJUnitPlatform()
}
